// <auto-generated />
using BiodigestoresAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BiodigestoresAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BiodigestoresAPI.Models.Biodigestor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Caudal")
                        .HasColumnType("float");

                    b.Property<int>("ExtensionId")
                        .HasColumnType("int");

                    b.Property<double>("Humedad")
                        .HasColumnType("float");

                    b.Property<double>("Temperaturaexterna")
                        .HasColumnType("float");

                    b.Property<double>("Temperaturainterna")
                        .HasColumnType("float");

                    b.Property<double>("pH")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ExtensionId");

                    b.ToTable("Biodigestores");
                });

            modelBuilder.Entity("BiodigestoresAPI.Models.Extension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UbicacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UbicacionId");

                    b.ToTable("Extensiones");
                });

            modelBuilder.Entity("BiodigestoresAPI.Models.Ubicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ubicaciones");
                });

            modelBuilder.Entity("BiodigestoresAPI.Models.Biodigestor", b =>
                {
                    b.HasOne("BiodigestoresAPI.Models.Extension", "Extension")
                        .WithMany()
                        .HasForeignKey("ExtensionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Extension");
                });

            modelBuilder.Entity("BiodigestoresAPI.Models.Extension", b =>
                {
                    b.HasOne("BiodigestoresAPI.Models.Ubicacion", "Ubicacion")
                        .WithMany()
                        .HasForeignKey("UbicacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ubicacion");
                });
#pragma warning restore 612, 618
        }
    }
}
